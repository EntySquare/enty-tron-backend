// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: message.response.proto

package message

import (
	fmt "fmt"
	github_com_golang_protobuf_proto "github.com/golang/protobuf/proto"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// General ORDER_RESP
type OrderResponse struct {
	UserId               *string  `protobuf:"bytes,1,req,name=userId" json:"userId,omitempty"`
	OrderSerialNumber    *string  `protobuf:"bytes,2,req,name=orderSerialNumber" json:"orderSerialNumber,omitempty"`
	OrderStatus          *string  `protobuf:"bytes,3,req,name=orderStatus" json:"orderStatus,omitempty"`
	OrderType            *string  `protobuf:"bytes,4,opt,name=orderType" json:"orderType,omitempty"`
	OrderResponse        *string  `protobuf:"bytes,5,opt,name=orderResponse" json:"orderResponse,omitempty"`
	Memo                 *string  `protobuf:"bytes,6,opt,name=memo" json:"memo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderResponse) Reset()         { *m = OrderResponse{} }
func (m *OrderResponse) String() string { return proto.CompactTextString(m) }
func (*OrderResponse) ProtoMessage()    {}
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a35678719edd7ed8, []int{0}
}
func (m *OrderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OrderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderResponse.Merge(m, src)
}
func (m *OrderResponse) XXX_Size() int {
	return m.Size()
}
func (m *OrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrderResponse proto.InternalMessageInfo

func (m *OrderResponse) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *OrderResponse) GetOrderSerialNumber() string {
	if m != nil && m.OrderSerialNumber != nil {
		return *m.OrderSerialNumber
	}
	return ""
}

func (m *OrderResponse) GetOrderStatus() string {
	if m != nil && m.OrderStatus != nil {
		return *m.OrderStatus
	}
	return ""
}

func (m *OrderResponse) GetOrderType() string {
	if m != nil && m.OrderType != nil {
		return *m.OrderType
	}
	return ""
}

func (m *OrderResponse) GetOrderResponse() string {
	if m != nil && m.OrderResponse != nil {
		return *m.OrderResponse
	}
	return ""
}

func (m *OrderResponse) GetMemo() string {
	if m != nil && m.Memo != nil {
		return *m.Memo
	}
	return ""
}

// Topic case WITHDRAW:
// -
// <OMS>/<ChainHandler>: TRANSACTION_RESP TRANSACTION_UPDATE
type TransactionResponse struct {
	TransactionId        *string  `protobuf:"bytes,1,req,name=transactionId" json:"transactionId,omitempty"`
	OrderSerialNumber    *string  `protobuf:"bytes,2,req,name=orderSerialNumber" json:"orderSerialNumber,omitempty"`
	TransactionStatus    *string  `protobuf:"bytes,3,opt,name=transactionStatus" json:"transactionStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionResponse) Reset()         { *m = TransactionResponse{} }
func (m *TransactionResponse) String() string { return proto.CompactTextString(m) }
func (*TransactionResponse) ProtoMessage()    {}
func (*TransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a35678719edd7ed8, []int{1}
}
func (m *TransactionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TransactionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionResponse.Merge(m, src)
}
func (m *TransactionResponse) XXX_Size() int {
	return m.Size()
}
func (m *TransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionResponse proto.InternalMessageInfo

func (m *TransactionResponse) GetTransactionId() string {
	if m != nil && m.TransactionId != nil {
		return *m.TransactionId
	}
	return ""
}

func (m *TransactionResponse) GetOrderSerialNumber() string {
	if m != nil && m.OrderSerialNumber != nil {
		return *m.OrderSerialNumber
	}
	return ""
}

func (m *TransactionResponse) GetTransactionStatus() string {
	if m != nil && m.TransactionStatus != nil {
		return *m.TransactionStatus
	}
	return ""
}

type TransactionUpdate struct {
	TransactionId           *string  `protobuf:"bytes,1,req,name=transactionId" json:"transactionId,omitempty"`
	TransactionUpdateStatus *string  `protobuf:"bytes,2,opt,name=transactionUpdateStatus" json:"transactionUpdateStatus,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *TransactionUpdate) Reset()         { *m = TransactionUpdate{} }
func (m *TransactionUpdate) String() string { return proto.CompactTextString(m) }
func (*TransactionUpdate) ProtoMessage()    {}
func (*TransactionUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_a35678719edd7ed8, []int{2}
}
func (m *TransactionUpdate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TransactionUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TransactionUpdate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TransactionUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionUpdate.Merge(m, src)
}
func (m *TransactionUpdate) XXX_Size() int {
	return m.Size()
}
func (m *TransactionUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionUpdate proto.InternalMessageInfo

func (m *TransactionUpdate) GetTransactionId() string {
	if m != nil && m.TransactionId != nil {
		return *m.TransactionId
	}
	return ""
}

func (m *TransactionUpdate) GetTransactionUpdateStatus() string {
	if m != nil && m.TransactionUpdateStatus != nil {
		return *m.TransactionUpdateStatus
	}
	return ""
}

type RiskResponse struct {
	OrderId              *int64   `protobuf:"varint,1,req,name=orderId" json:"orderId,omitempty"`
	RiskStatus           *string  `protobuf:"bytes,2,opt,name=RiskStatus,def=0" json:"RiskStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RiskResponse) Reset()         { *m = RiskResponse{} }
func (m *RiskResponse) String() string { return proto.CompactTextString(m) }
func (*RiskResponse) ProtoMessage()    {}
func (*RiskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a35678719edd7ed8, []int{3}
}
func (m *RiskResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RiskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RiskResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RiskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RiskResponse.Merge(m, src)
}
func (m *RiskResponse) XXX_Size() int {
	return m.Size()
}
func (m *RiskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RiskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RiskResponse proto.InternalMessageInfo

const Default_RiskResponse_RiskStatus string = "0"

func (m *RiskResponse) GetOrderId() int64 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

func (m *RiskResponse) GetRiskStatus() string {
	if m != nil && m.RiskStatus != nil {
		return *m.RiskStatus
	}
	return Default_RiskResponse_RiskStatus
}

func init() {
	proto.RegisterType((*OrderResponse)(nil), "message.OrderResponse")
	proto.RegisterType((*TransactionResponse)(nil), "message.TransactionResponse")
	proto.RegisterType((*TransactionUpdate)(nil), "message.TransactionUpdate")
	proto.RegisterType((*RiskResponse)(nil), "message.RiskResponse")
}

func init() { proto.RegisterFile("message.response.proto", fileDescriptor_a35678719edd7ed8) }

var fileDescriptor_a35678719edd7ed8 = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0xc1, 0x4a, 0xf3, 0x40,
	0x14, 0x85, 0xff, 0x49, 0xfb, 0xb7, 0xe4, 0x6a, 0xc0, 0x8c, 0x50, 0x67, 0x21, 0x21, 0x86, 0x2e,
	0xba, 0x28, 0xc5, 0xa5, 0xb8, 0x74, 0x27, 0x82, 0xc2, 0x58, 0x1f, 0x60, 0x34, 0x17, 0x09, 0x9a,
	0x4c, 0x98, 0x99, 0x2c, 0x7c, 0x12, 0x7d, 0x24, 0x77, 0xfa, 0x08, 0x12, 0x5f, 0x44, 0x32, 0x8e,
	0xe9, 0xd4, 0x22, 0xe8, 0x2e, 0xf7, 0x3b, 0xe7, 0xe6, 0x9e, 0x33, 0x30, 0x29, 0x51, 0x6b, 0x71,
	0x8b, 0x0b, 0x85, 0xba, 0x96, 0x95, 0xc6, 0x45, 0xad, 0xa4, 0x91, 0x74, 0xec, 0x78, 0xf6, 0x42,
	0x20, 0xba, 0x50, 0x39, 0x2a, 0xee, 0x0c, 0x74, 0x02, 0xa3, 0x46, 0xa3, 0x3a, 0xcd, 0x19, 0x49,
	0x83, 0x59, 0xc8, 0xdd, 0x44, 0xe7, 0x10, 0xcb, 0xce, 0x78, 0x89, 0xaa, 0x10, 0xf7, 0xe7, 0x4d,
	0x79, 0x8d, 0x8a, 0x05, 0xd6, 0xb2, 0x29, 0xd0, 0x14, 0xb6, 0x3e, 0xa1, 0x11, 0xa6, 0xd1, 0x6c,
	0x60, 0x7d, 0x3e, 0xa2, 0xfb, 0x10, 0xda, 0x71, 0xf9, 0x50, 0x23, 0x1b, 0xa6, 0x64, 0x16, 0xf2,
	0x15, 0xa0, 0x53, 0x88, 0xa4, 0x1f, 0x8b, 0xfd, 0xb7, 0x8e, 0x75, 0x48, 0x29, 0x0c, 0x4b, 0x2c,
	0x25, 0x1b, 0x59, 0xd1, 0x7e, 0x67, 0x8f, 0x04, 0x76, 0x97, 0x4a, 0x54, 0x5a, 0xdc, 0x98, 0x42,
	0x56, 0xbd, 0x77, 0x0a, 0x91, 0x59, 0xe1, 0xbe, 0xde, 0x3a, 0xfc, 0x63, 0xcb, 0x39, 0xc4, 0xde,
	0x7a, 0xdf, 0xb5, 0x0b, 0xb3, 0x29, 0x64, 0x1a, 0x62, 0x2f, 0xd8, 0x55, 0x9d, 0x0b, 0xf3, 0xdb,
	0x58, 0x47, 0xb0, 0x67, 0xbe, 0xaf, 0xba, 0x73, 0x81, 0x3d, 0xf7, 0x93, 0x9c, 0x9d, 0xc1, 0x36,
	0x2f, 0xf4, 0x5d, 0xff, 0x0c, 0x0c, 0xc6, 0xb6, 0x87, 0xbb, 0x34, 0xe0, 0x5f, 0x23, 0x3d, 0x00,
	0xe8, 0x9c, 0xfe, 0x6f, 0x8f, 0xc9, 0x21, 0xf7, 0xe0, 0xc9, 0xce, 0x73, 0x9b, 0x90, 0xd7, 0x36,
	0x21, 0x6f, 0x6d, 0x42, 0x9e, 0xde, 0x93, 0x7f, 0x1f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x30, 0x99,
	0xe9, 0x3f, 0x61, 0x02, 0x00, 0x00,
}

func (m *OrderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OrderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OrderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Memo != nil {
		i -= len(*m.Memo)
		copy(dAtA[i:], *m.Memo)
		i = encodeVarintMessageResponse(dAtA, i, uint64(len(*m.Memo)))
		i--
		dAtA[i] = 0x32
	}
	if m.OrderResponse != nil {
		i -= len(*m.OrderResponse)
		copy(dAtA[i:], *m.OrderResponse)
		i = encodeVarintMessageResponse(dAtA, i, uint64(len(*m.OrderResponse)))
		i--
		dAtA[i] = 0x2a
	}
	if m.OrderType != nil {
		i -= len(*m.OrderType)
		copy(dAtA[i:], *m.OrderType)
		i = encodeVarintMessageResponse(dAtA, i, uint64(len(*m.OrderType)))
		i--
		dAtA[i] = 0x22
	}
	if m.OrderStatus == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.OrderStatus)
		copy(dAtA[i:], *m.OrderStatus)
		i = encodeVarintMessageResponse(dAtA, i, uint64(len(*m.OrderStatus)))
		i--
		dAtA[i] = 0x1a
	}
	if m.OrderSerialNumber == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.OrderSerialNumber)
		copy(dAtA[i:], *m.OrderSerialNumber)
		i = encodeVarintMessageResponse(dAtA, i, uint64(len(*m.OrderSerialNumber)))
		i--
		dAtA[i] = 0x12
	}
	if m.UserId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.UserId)
		copy(dAtA[i:], *m.UserId)
		i = encodeVarintMessageResponse(dAtA, i, uint64(len(*m.UserId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TransactionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TransactionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TransactionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TransactionStatus != nil {
		i -= len(*m.TransactionStatus)
		copy(dAtA[i:], *m.TransactionStatus)
		i = encodeVarintMessageResponse(dAtA, i, uint64(len(*m.TransactionStatus)))
		i--
		dAtA[i] = 0x1a
	}
	if m.OrderSerialNumber == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.OrderSerialNumber)
		copy(dAtA[i:], *m.OrderSerialNumber)
		i = encodeVarintMessageResponse(dAtA, i, uint64(len(*m.OrderSerialNumber)))
		i--
		dAtA[i] = 0x12
	}
	if m.TransactionId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.TransactionId)
		copy(dAtA[i:], *m.TransactionId)
		i = encodeVarintMessageResponse(dAtA, i, uint64(len(*m.TransactionId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TransactionUpdate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TransactionUpdate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TransactionUpdate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TransactionUpdateStatus != nil {
		i -= len(*m.TransactionUpdateStatus)
		copy(dAtA[i:], *m.TransactionUpdateStatus)
		i = encodeVarintMessageResponse(dAtA, i, uint64(len(*m.TransactionUpdateStatus)))
		i--
		dAtA[i] = 0x12
	}
	if m.TransactionId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.TransactionId)
		copy(dAtA[i:], *m.TransactionId)
		i = encodeVarintMessageResponse(dAtA, i, uint64(len(*m.TransactionId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RiskResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RiskResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RiskResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RiskStatus != nil {
		i -= len(*m.RiskStatus)
		copy(dAtA[i:], *m.RiskStatus)
		i = encodeVarintMessageResponse(dAtA, i, uint64(len(*m.RiskStatus)))
		i--
		dAtA[i] = 0x12
	}
	if m.OrderId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintMessageResponse(dAtA, i, uint64(*m.OrderId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintMessageResponse(dAtA []byte, offset int, v uint64) int {
	offset -= sovMessageResponse(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *OrderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != nil {
		l = len(*m.UserId)
		n += 1 + l + sovMessageResponse(uint64(l))
	}
	if m.OrderSerialNumber != nil {
		l = len(*m.OrderSerialNumber)
		n += 1 + l + sovMessageResponse(uint64(l))
	}
	if m.OrderStatus != nil {
		l = len(*m.OrderStatus)
		n += 1 + l + sovMessageResponse(uint64(l))
	}
	if m.OrderType != nil {
		l = len(*m.OrderType)
		n += 1 + l + sovMessageResponse(uint64(l))
	}
	if m.OrderResponse != nil {
		l = len(*m.OrderResponse)
		n += 1 + l + sovMessageResponse(uint64(l))
	}
	if m.Memo != nil {
		l = len(*m.Memo)
		n += 1 + l + sovMessageResponse(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TransactionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TransactionId != nil {
		l = len(*m.TransactionId)
		n += 1 + l + sovMessageResponse(uint64(l))
	}
	if m.OrderSerialNumber != nil {
		l = len(*m.OrderSerialNumber)
		n += 1 + l + sovMessageResponse(uint64(l))
	}
	if m.TransactionStatus != nil {
		l = len(*m.TransactionStatus)
		n += 1 + l + sovMessageResponse(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TransactionUpdate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TransactionId != nil {
		l = len(*m.TransactionId)
		n += 1 + l + sovMessageResponse(uint64(l))
	}
	if m.TransactionUpdateStatus != nil {
		l = len(*m.TransactionUpdateStatus)
		n += 1 + l + sovMessageResponse(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RiskResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OrderId != nil {
		n += 1 + sovMessageResponse(uint64(*m.OrderId))
	}
	if m.RiskStatus != nil {
		l = len(*m.RiskStatus)
		n += 1 + l + sovMessageResponse(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovMessageResponse(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMessageResponse(x uint64) (n int) {
	return sovMessageResponse(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *OrderResponse) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessageResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OrderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OrderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessageResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessageResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.UserId = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderSerialNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessageResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessageResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.OrderSerialNumber = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessageResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessageResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.OrderStatus = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessageResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessageResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.OrderType = &s
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderResponse", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessageResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessageResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.OrderResponse = &s
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Memo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessageResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessageResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Memo = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessageResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessageResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TransactionResponse) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessageResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TransactionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TransactionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TransactionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessageResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessageResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.TransactionId = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderSerialNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessageResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessageResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.OrderSerialNumber = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TransactionStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessageResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessageResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.TransactionStatus = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessageResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessageResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TransactionUpdate) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessageResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TransactionUpdate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TransactionUpdate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TransactionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessageResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessageResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.TransactionId = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TransactionUpdateStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessageResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessageResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.TransactionUpdateStatus = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessageResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessageResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RiskResponse) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessageResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RiskResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RiskResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OrderId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RiskStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessageResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessageResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.RiskStatus = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessageResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessageResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMessageResponse(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMessageResponse
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMessageResponse
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMessageResponse
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMessageResponse
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMessageResponse
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMessageResponse
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMessageResponse        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMessageResponse          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMessageResponse = fmt.Errorf("proto: unexpected end of group")
)
